#! /bin/bash

echo "
/*
  WARNING! This file is automatically generated by the make_anna_char_i.sh script.
  Do not edit it directly, your changes will be overwritten!
*/
"

init="
    anna_type_t *i_argv[]=
	{
	    char_type,
            int_type
	}
    ;
    
    wchar_t *argn[]=
	{
	  L\"this\", L\"param\"
	}
    ;

    mid_t mmid;
    anna_function_t *fun;
"

init="$init
"

for i in "add +" "sub -" "increaseAssign +" "decreaseAssign -"; do
    name=$(echo "$i"|cut -f 1 -d ' ')
    op=$(echo "$i"|cut -f 2 -d ' ')
    
    init="$init
    mmid = anna_member_create_native_method(char_type, anna_mid_get(L\"__${name}__Int__\"), 0, &anna_char_i_${name}, char_type, 2, i_argv, argn);
    fun = anna_function_unwrap(anna_as_obj_fast(anna_entry_get_static(char_type, mmid)));
    anna_function_alias_add(fun, L\"__${name}__\");

"

    echo "
ANNA_NATIVE(anna_char_i_$name, 2)
{
    if(anna_is_obj(param[1]) && anna_as_obj(param[1])==null_object)
        return null_entry;
  
    wchar_t v1 = anna_as_char(param[0]);
    int v2 = anna_as_int(param[1]);
    return anna_from_char(v1 $op v2);
}
"
done

init="$init
"
for i in "nextAssign v+1" "prevAssign v-1" ; do
    name=$(echo "$i"|cut -f 1 -d ' ')
    op=$(echo "$i"|cut -f 2- -d ' ')
    
    init="$init
    anna_member_create_native_method(
	char_type, anna_mid_get(L\"__${name}__\"), 0, 
	&anna_char_i_${name}, 
	char_type,
	1, i_argv, argn);
"

    echo "
ANNA_NATIVE(anna_char_i_$name, 2)
{
    wchar_t v = anna_as_char(param[0]);
    return anna_from_char($op);
}
"
done

echo "
static void anna_char_type_i_create()
{
$init
}"

