def main()
{
    f := parser.FloatLiteral(?, 1.0);
    print(f, ' ', f.payload, '\n');

    i := parser.IntLiteral(?, 1);
    print(i, ' ', i.payload, '\n');
    
    i2 := parser.IntLiteral(?, 2);
    print(i, ' ', i.payload, '\n');
    
    i22 := parser.IntLiteral(?, 2);
    print(i, ' ', i.payload, '\n');
    
    s := parser.StringLiteral(?, "bla");
    print(s, ' ', s.payload, '\n');
    
    c := parser.CharLiteral(?, 'b');
    print(c, ' ', c.payload, '\n');
    
    cc := parser.Call(?, c, i, s);
    print(cc, ' ', cc.function, ' ', cc.count, ' ', cc[0], ' ', cc[1],'\n');

    cl := parser.Closure(?, def (Int in){in+3});
    print(cl.payload.inputName,'\n');

    mm := parser.Mapping(?, ast(1), ast('d'));
    print(mm.from, ' ', mm.to,'\n');

    
}