def Int range__cmp__(Range this, Object other)
(
    target(Range), 
    name(__cmp__),
    documentation("Compare two ranges against each other"),
)
{
    r := other as Range;
    if(!r)
    {
	return -1;
    }
    if(this.from != r.from)
    {
	return this.from-r.from;
    }

    if(this.to != r.to)
    {
	return this.to-r.to;
    }

    if(this.step != r.step)
    {
	return this.step-r.step;
    }
    return 0;
}

def rangeHashCode(Range this)
(
    target(Range), 
    name(hashCode),
    documentation("Hash function. Always returns the same number for the same object and also returns the same number for two equal objects."),
)
{
    return this.from ^bitxor (this.to ^shl 3) ^bitxor (this.step ^shl 7);
}

def rangeToString(Range this)
(
    target(Range),
    name(toString),
    documentation("String conversion. Called by the String::convert method."),
)
{
    if(this.isOpen)
    {
	return "[" ~ this.from ~", "~ (this.from+this.step)~", "~ (this.from+this.step+this.step)~"...]";
    }
    return "[" ~ ", ".join(this.map(value){""~(value)}) ~ "]";
}
