macro checkNodeType(node)
{
    return ast(
	if(! (%x as %y) )
	{
	    %x.error("Unexpected node type. Expected node of type "~ %y); 
	    return NullLiteral(%x);
	}).replace(ast(%x), node[0]).replace(ast(%y), node[1]);
}

macro checkNodeCallTo(node)
{
    return ast(
	{
	    if(!(%x as Call))
	    {
		%x.error("Unexpected node type. Expected node of type Call"); 
		return NullLiteral(%x);
	    }
	    if(%y != ((%x as Call).function as Identifier).name)
	    {
		(%x as Call).function.error("Unexpected node. Expected an identifier named " ~ %y); 
		return NullLiteral(%x);
	    }
	}()
	).replace(ast(%x), node[0]).replace(ast(%y), node[1]);
}

macro checkNodeBlock(node)
{
    return ast(
	if(! (((%x as Call).function as Identifier).name == "__block__"))
	{
	    %x.error("Expected a block definition"); 
	    return NullLiteral(%x);
	}).replace(ast(%x), node[0]);
}
macro checkCallCount(node)
{
    return ast(
	if(%node.count != %count)
	{
	    %node.error("Call has " ~ %node.count ~ " paramtersr, expected " ~ %count);
	    return NullLiteral(%node);
	}
	).replace(ast(%node), node[0]).replace(ast(%count), node[1]);
}
