/*
macro raise(definition)
{
    name := definition[0] as Identifier;
    definition.function = ast(type);
    par := definition[1];
    definition[1] = ast({});
    body := definition[2] as Call;
    fun := ast(
	def check(Error error)
	     {
		 return error == %me;
	     }) % ["me": name];
    
    body ~= [fun];
    
    return definition;
}

*/

macro collect(definition)
{
  res := ast(({%collect := List«error.Error»(); {%code}(); %collect}())) % ["collect": Identifier(?, "!collect"), "code": definition[0]];
    print(res);
    res;
}

