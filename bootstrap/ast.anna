
macro ast(node)
(
    documentation("
A macro that takes an AST tree and returns it verbatim. This is useful for creating code templates, and often used togerther with the AST Node formating function. 

Example:

ast(%value := 0) % [\"value\": Identifier(?, \"someVariableName\") ];

The above example will return an AST that is equivalent to the following code:

someVariableName := 0;

")
)
{
    if(node.count != 1)
    {
	node.error("ast macro expects exactly one argument");
	return ?;
    }
    nam := "Node";
    if(node[0] as Identifier)
    {
	nam = "Identifier";
    }
    if(node[0] as Call)
    {
	nam = "Call";
    }
    return Call(
	node,	   
	Identifier(node, "cast"), 
	Call(node, 
	     Call(node, 
		  Identifier(node, "__memberGet__"), 
		  Dummy(node, node[0]),
		  Identifier(node, "copy"))),
	Dummy(node, node[0].__type__()));
}
