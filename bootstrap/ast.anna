attribute(internal, doc("Internal module for the ast macro."))

macro ast(node) (
    doc("
A macro that takes an AST tree and returns it verbatim. This is useful for creating code templates, and often used together with the AST Node formating function.",
"
Example:
",
"
<pre class='anna-code'>
ast(%value := 0) % [\"value\": Identifier(?, \"someVariableName\") ]
</pre>",
"
The above example will return an AST that is equivalent to the following code:
",
"
<pre class='anna-code'>
someVariableName := 0
</pre>
")
){
    if(lang.__neqInternal__(node.count.__cmp__(1))){
	node.error("ast macro expects exactly one argument, found " ~ node.count)
	return ?
    }
    return Call(
	node,	   
	Identifier(node, "__cast__"), 
	Call(node,
	     Call(node, 
		  Identifier(node, "__memberGet__"), 
		  Dummy(node, node[0]),
		  Identifier(node, "copy"))),
	Dummy(node, type(node[0])))
}

