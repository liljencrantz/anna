
def %Res reduce(
    %Coll collection,
    %Res initial, 
    def %Res function(%Res first, %Res second)) 
(
    template(%Coll: List, %Res: Object),
    doc("Perform the reduce operation on the collection. FIXME: Elaborate...")
)
{
    res := initial;
    collection.each(val){res = function(res, val);}
    return res;
}

def sum(%T collection) 
(
    template(%T: List«Int»),
    doc("Calculate the sum of all the elements in the specified collection"),
)
{
    res := __staticTypeOf__(collection.first)::convert(0);
    collection.each(val){res += val}
    return res;
}

def prod(%T collection) 
(
    template(%T: List«Int»),
    doc("Calculate the product of all the elements in the specified collection"),
)
{
    res := __staticTypeOf__(collection.first)::convert(1);
    collection.each(val){res = res*val}
    return res;
}
