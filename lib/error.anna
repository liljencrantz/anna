
type Error
{
    var reflection.Continuation source(internal);
    var String message;
    def __init__(String message=?)
    {
	this.message = message;
	source = reflection.currentContinuation;
    }
    
    def String toString()
    {
	this.__type__.name;
    }
}

def raise(Error error)
{
    def Object funEach(reflection.Continuation item)
    {
	if(coll := (item["!collect"] as MutableList))
	{
	    coll ~= [error];
	    return;
	} 

	if(item.dynamicFrame)
	{
	    funEach(item.dynamicFrame);
	    return;
	}

	print("Uncaught error:\n", error, '\n');
    }
    
    funEach(reflection.currentContinuation);
}

