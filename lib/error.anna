
type Error
{

    var reflection.Continuation source(internal);

    def __init__()
    {
	source = reflection.currentContinuation;
    }
    
    def String toString()
    {
	this.__type__.name;
    }
    
}

def raise(Error error)
{
    def Object funEach(reflection.Continuation item)
    {
	if(coll := (item["!collect"] as MutableList))
	{
	    coll ~= [error];
	} else 
	{
	    if(item.caller)
	    {
		funEach(item.caller);
	    } else
	    {
		print("Uncaught error:\n", error, '\n');
	    }
	}
    }
    
    funEach(reflection.currentContinuation);
}

